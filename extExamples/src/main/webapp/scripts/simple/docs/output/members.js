Docs.membersData = {"data":[{"cls":"jasmine.VERBOSE","member":"VERBOSE","type":"cls","doc":"Show diagnostic messages in the console if set to true"},{"cls":"jasmine.DEFAULT_UPDATE_INTERVAL","member":"DEFAULT_UPDATE_INTERVAL","type":"cls","doc":"Default interval in milliseconds for event loop yields (e.g."},{"cls":"jasmine.DEFAULT_TIMEOUT_INTERVAL","member":"DEFAULT_TIMEOUT_INTERVAL","type":"cls","doc":"Default timeout interval in milliseconds for waitsFor() blocks."},{"cls":"jasmine.DEFAULT_TIMEOUT_INTERVAL","member":"any","type":"method","doc":"Returns a matchable 'generic' object of the class type."},{"cls":"jasmine.DEFAULT_TIMEOUT_INTERVAL","member":"getEnv","type":"method","doc":"Getter for the Jasmine environment."},{"cls":"jasmine.DEFAULT_TIMEOUT_INTERVAL","member":"isDomNode","type":"method","doc":"Returns true if the object is a DOM Node."},{"cls":"jasmine.DEFAULT_TIMEOUT_INTERVAL","member":"pp","type":"method","doc":"Pretty printer for expecations."},{"cls":"jasmine.Spy","member":"Spy","type":"cls","doc":"Jasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks."},{"cls":"jasmine.Spy","member":"argsForCall","type":"property","doc":"Holds arguments for each call to the spy, indexed by call count\n@example\nvar mySpy = jasmine.createSpy('foo');\nmySpy(..."},{"cls":"jasmine.Spy","member":"identity","type":"property","doc":"The name of the spy, if provided."},{"cls":"jasmine.Spy","member":"isSpy","type":"property","doc":"Is this Object a spy?"},{"cls":"jasmine.Spy","member":"mostRecentCall","type":"property","doc":"Tracking of the most recent call to the spy."},{"cls":"jasmine.Spy","member":"util","type":"property","doc":"@namespace"},{"cls":"jasmine.Spy","member":"afterEach","type":"method","doc":"A function that is called after each spec in a suite."},{"cls":"jasmine.Spy","member":"andCallFake","type":"method","doc":"Calls an alternate implementation when a spy is called."},{"cls":"jasmine.Spy","member":"andCallThrough","type":"method","doc":"Tells a spy to call through to the actual implemenatation."},{"cls":"jasmine.Spy","member":"andReturn","type":"method","doc":"For setting the return value of a spy."},{"cls":"jasmine.Spy","member":"andThrow","type":"method","doc":"For throwing an exception when a spy is called."},{"cls":"jasmine.Spy","member":"beforeEach","type":"method","doc":"A function that is called before each spec in a suite."},{"cls":"jasmine.Spy","member":"createSpyObj","type":"method","doc":"Creates a more complicated spy: an Object that has every property a function that is a spy."},{"cls":"jasmine.Spy","member":"describe","type":"method","doc":"Defines a suite of specifications."},{"cls":"jasmine.Spy","member":"expect","type":"method","doc":"Starts a chain for a Jasmine expectation."},{"cls":"jasmine.Spy","member":"isSpy","type":"method","doc":"Determines whether an object is a spy."},{"cls":"jasmine.Spy","member":"it","type":"method","doc":"Creates a Jasmine spec that will be added to the current suite."},{"cls":"jasmine.Spy","member":"log","type":"method","doc":"All parameters are pretty-printed and concatenated together, then written to the current spec's output."},{"cls":"jasmine.Spy","member":"plan","type":"method","doc":"The actual function this spy stubs."},{"cls":"jasmine.Spy","member":"reset","type":"method","doc":"Resets all of a spy's the tracking variables so that it can be used again."},{"cls":"jasmine.Spy","member":"runs","type":"method","doc":"Defines part of a jasmine spec."},{"cls":"jasmine.Spy","member":"spyOn","type":"method","doc":"Function that installs a spy on an existing object's method name."},{"cls":"jasmine.Spy","member":"waits","type":"method","doc":"Waits a fixed time period before moving to the next block."},{"cls":"jasmine.Spy","member":"waitsFor","type":"method","doc":"Waits for the latchFunction to return true before proceeding to the next block."},{"cls":"jasmine.Spy","member":"xdescribe","type":"method","doc":"Disables a suite of specifications."},{"cls":"jasmine.Spy","member":"xit","type":"method","doc":"Creates a disabled Jasmine spec."},{"cls":"jasmine.Env","member":"Env","type":"cls","doc":"Environment for Jasmine"},{"cls":"jasmine.Env","member":"addReporter","type":"method","doc":"Register a reporter to receive status updates from Jasmine."},{"cls":"jasmine.Env","member":"nextSpecId","type":"method","doc":""},{"cls":"jasmine.Env","member":"nextSuiteId","type":"method","doc":""},{"cls":"jasmine.Env","member":"version","type":"method","doc":""},{"cls":"jasmine.Env","member":"versionString","type":"method","doc":""},{"cls":"jasmine.Reporter","member":"Reporter","type":"cls","doc":"No-op base class for Jasmine reporters."},{"cls":"jasmine.Block","member":"Block","type":"cls","doc":"Blocks are functions with executable code that make up a spec."},{"cls":"jasmine.JsApiReporter","member":"JsApiReporter","type":"cls","doc":"JavaScript API reporter."},{"cls":"jasmine.Matchers","member":"Matchers","type":"cls","doc":""},{"cls":"jasmine.Matchers","member":"wasCalled","type":"property","doc":"@deprecated Use expect(xxx).toHaveBeenCalled() instead"},{"cls":"jasmine.Matchers","member":"wasCalledWith","type":"property","doc":"@deprecated Use expect(xxx).toHaveBeenCalledWith() instead"},{"cls":"jasmine.Matchers","member":"toBe","type":"method","doc":"toBe: compares the actual to the expected using ==="},{"cls":"jasmine.Matchers","member":"toBeCloseTo","type":"method","doc":"Matcher that checks that the expected item is equal to the actual item\nup to a given level of decimal precision (defa..."},{"cls":"jasmine.Matchers","member":"toBeDefined","type":"method","doc":"Matcher that compares the actual to jasmine.undefined."},{"cls":"jasmine.Matchers","member":"toBeFalsy","type":"method","doc":"Matcher that boolean nots the actual."},{"cls":"jasmine.Matchers","member":"toBeNull","type":"method","doc":"Matcher that compares the actual to null."},{"cls":"jasmine.Matchers","member":"toBeTruthy","type":"method","doc":"Matcher that boolean not-nots the actual."},{"cls":"jasmine.Matchers","member":"toBeUndefined","type":"method","doc":"Matcher that compares the actual to jasmine.undefined."},{"cls":"jasmine.Matchers","member":"toContain","type":"method","doc":"Matcher that checks that the expected item is an element in the actual Array."},{"cls":"jasmine.Matchers","member":"toEqual","type":"method","doc":"toEqual: compares the actual to the expected using common sense equality."},{"cls":"jasmine.Matchers","member":"toHaveBeenCalled","type":"method","doc":"Matcher that checks to see if the actual, a Jasmine spy, was called."},{"cls":"jasmine.Matchers","member":"toHaveBeenCalledWith","type":"method","doc":"Matcher that checks to see if the actual, a Jasmine spy, was called with a set of parameters."},{"cls":"jasmine.Matchers","member":"toMatch","type":"method","doc":"Matcher that compares the actual to the expected using a regular expression."},{"cls":"jasmine.Matchers","member":"toNotBe","type":"method","doc":"toNotBe: compares the actual to the expected using !=="},{"cls":"jasmine.Matchers","member":"toNotContain","type":"method","doc":"Matcher that checks that the expected item is NOT an element in the actual Array."},{"cls":"jasmine.Matchers","member":"toNotEqual","type":"method","doc":"toNotEqual: compares the actual to the expected using the ! of jasmine.Matchers.toEqual"},{"cls":"jasmine.Matchers","member":"toNotMatch","type":"method","doc":"Matcher that compares the actual to the expected using the boolean inverse of jasmine.Matchers.toMatch"},{"cls":"jasmine.Matchers","member":"toThrow","type":"method","doc":"Matcher that checks that the expected exception was thrown by the actual."},{"cls":"jasmine.Matchers","member":"wasNotCalled","type":"method","doc":"Matcher that checks to see if the actual, a Jasmine spy, was not called."},{"cls":"jasmine.Matchers","member":"wasNotCalledWith","type":"method","doc":"@deprecated Use expect(xxx).not.toHaveBeenCalledWith() instead"},{"cls":"jasmine.MultiReporter","member":"MultiReporter","type":"cls","doc":""},{"cls":"jasmine.NestedResults","member":"NestedResults","type":"cls","doc":"Holds results for a set of Jasmine spec."},{"cls":"jasmine.NestedResults","member":"failedCount","type":"property","doc":"Number of failed results"},{"cls":"jasmine.NestedResults","member":"passedCount","type":"property","doc":"Number of passed results"},{"cls":"jasmine.NestedResults","member":"skipped","type":"property","doc":"Was this suite/spec skipped?"},{"cls":"jasmine.NestedResults","member":"totalCount","type":"property","doc":"The total count of results"},{"cls":"jasmine.NestedResults","member":"addResult","type":"method","doc":"Adds a result, tracking counts (total, passed, & failed)"},{"cls":"jasmine.NestedResults","member":"getItems","type":"method","doc":"Getter for the results: message & results."},{"cls":"jasmine.NestedResults","member":"log","type":"method","doc":"Adds a log message."},{"cls":"jasmine.NestedResults","member":"passed","type":"method","doc":""},{"cls":"jasmine.NestedResults","member":"rollupCounts","type":"method","doc":"Roll up the result counts."},{"cls":"jasmine.PrettyPrinter","member":"PrettyPrinter","type":"cls","doc":"Base class for pretty printing for expectation results."},{"cls":"jasmine.PrettyPrinter","member":"format","type":"method","doc":"Formats a value in a nice, human-readable string."},{"cls":"jasmine.Runner","member":"Runner","type":"cls","doc":"Runner"},{"cls":"jasmine.Spec","member":"Spec","type":"cls","doc":"Internal representation of a Jasmine specification, or test."},{"cls":"jasmine.Spec","member":"addMatcherResult","type":"method","doc":""},{"cls":"jasmine.Spec","member":"log","type":"method","doc":"All parameters are pretty-printed and concatenated together, then written to the spec's output."},{"cls":"jasmine.Spec","member":"waits","type":"method","doc":"Waits a fixed time period before moving to the next block."},{"cls":"jasmine.Spec","member":"waitsFor","type":"method","doc":"Waits for the latchFunction to return true before proceeding to the next block."},{"cls":"jasmine.Suite","member":"Suite","type":"cls","doc":"Internal representation of a Jasmine suite."},{"cls":"jasmine.WaitsForBlock","member":"WaitsForBlock","type":"cls","doc":"A block which waits for some condition to become true, with timeout."},{"cls":"jasmine.Clock","member":"Clock","type":"cls","doc":"@namespace"},{"cls":"AM.controller.Users","member":"Users","type":"cls","doc":"User controller"},{"cls":"AM.controller.Users","member":"launch","type":"property","doc":"Called automatically when the page has completely loaded."},{"cls":"global","member":"global","type":"cls","doc":"Global variables and functions."},{"cls":"global","member":"jasmine","type":"property","doc":"Top level namespace for Jasmine, a lightweight JavaScript BDD/spec/testing framework."}]};